----------------------------------------------------------------------------------------
Q1. Which operator returns true if the two compared values are not equal?
 <>
 ~
 ==!
 !==  X
----------------------------------------------------------------------------------------
Q2. How is a forEach statement different from a for statement?
 Only a for statement uses a callback function.
 A for statement is generic, but a forEach statement can be used only with an array. X
 Only a forEach statement lets you specify your own iterator.
 A forEach statement is generic, but a for statement can be used only with an array.
----------------------------------------------------------------------------------------
Q3. Which statement is the correct way to create a variable called rate and assign it the value 100?
 let rate = 100; X
 let 100 = rate;
 100 = let rate;
 rate = 100;
----------------------------------------------------------------------------------------
Q4. Which statement creates a new object using the Person constructor? Which statement creates a new Person object called "student"?
 var student = new Person();  X
 var student = construct Person;
 var student = Person();
 var student = construct Person();
----------------------------------------------------------------------------------------
Q5. Which statement creates a new function called discountPrice?
 A     X
let discountPrice = function (price) {
  return price * 0.85;
};   
 B
let discountPrice(price) {
  return price * 0.85;
};
 C
let function = discountPrice(price) {
  return price * 0.85;
};
 D
discountPrice = function (price) {
  return price * 0.85;
};
----------------------------------------------------------------------------------------
Q6. What is the result in the console of running this code?
'use strict';
function logThis() {
  this.desc = 'logger';
  console.log(this);
}
new logThis();
 undefined
 window
 {desc: "logger"}  X
 function
----------------------------------------------------------------------------------------
Q7. How would you reference the text 'avenue' in the code shown?
let roadTypes = ['street', 'road', 'avenue', 'circle'];
 roadTypes.2
 roadTypes[3]
 roadTypes.3
 roadTypes[2]  X
----------------------------------------------------------------------------------------
Q8. What is the result of running this statement?
console.log(typeof 42);
 'float'
 'value'
 'number' X
 'integer'
----------------------------------------------------------------------------------------
Q9. . Which property references the DOM object that dispatched an event?
 self
 object
 target X
 source
----------------------------------------------------------------------------------------
Q10. You're adding error handling to the code shown. Which code would you include within the if statement to specify an error message?
function addNumbers(x, y) {
  if (isNaN(x) || isNaN(y)) {
  }
}
 exception('One or both parameters are not numbers')
 catch('One or both parameters are not numbers')
 error('One or both parameters are not numbers')  
 throw('One or both parameters are not numbers')  X
----------------------------------------------------------------------------------------
Q11. Which method converts JSON data to a JavaScript object?
 JSON.fromString();
 JSON.parse()  X
 JSON.toObject()
 JSON.stringify()
----------------------------------------------------------------------------------------
Q12. When would you use a conditional statement?
 When you want to reuse a set of statements multiple times.
 When you want your code to choose between multiple options.  X
 When you want to group data together.
 When you want to loop through a group of statement.
----------------------------------------------------------------------------------------
Q13. What would be the result in the console of running this code?
for (var i = 0; i < 5; i++) {
  console.log(i);
}
 1 2 3 4 5
 1 2 3 4  
 0 1 2 3 4  X
 0 1 2 3 4 5
----------------------------------------------------------------------------------------
Q14. Which Object method returns an iterable that can be used to iterate over the properties of an object?
 Object.get()
 Object.loop()
 Object.each()
 Object.keys()  X
----------------------------------------------------------------------------------------
Q15. What will be logged to the console?
var a = ['dog', 'cat', 'hen'];
a[100] = 'fox';
console.log(a.length);

 101 X
 3
 4
 100
----------------------------------------------------------------------------------------
Q16. 0 && hi
 ReferenceError
 true
 0  X
 false
----------------------------------------------------------------------------------------
Q17. Which of the following operators can be used to do a short-circuit evaluation?
 ++
 --
 ==
 ||  X
----------------------------------------------------------------------------------------
Q18. Which statement sets the Person constructor as the parent of the Student constructor in the prototype chain?
 Student.parent = Person;
 Student.prototype = new Person();   X
 Student.prototype = Person;
 Student.prototype = Person();
----------------------------------------------------------------------------------------
Q19. Which Variable-defining keyword allows its variable to be accessed (as undefined) before the line that defines it?
 all of them
 const
 var  X
 let
----------------------------------------------------------------------------------------
Q20. Which of the following values is not a Boolean false?
 Boolean(0)
 Boolean("")
 Boolean(NaN)
 Boolean("false")  X
----------------------------------------------------------------------------------------
Q21. Which of the following is not a keyword in JavaScript?
 this
 catch
 function
 array  X
----------------------------------------------------------------------------------------
Q22. Which variable is an implicit parameter for every function in JavaScript?
 Arguments  X
 args
 argsArray
 argumentsList
----------------------------------------------------------------------------------------
Q23. For the following class, how do you get the value of 42 from an instance of X?
class X {
  get Y() {
    return 42;
  }
}
var x = new X();

 x.get('Y')
 x.Y  X
 x.Y()
 x.get().Y
----------------------------------------------------------------------------------------
Q24. What is the result of running this code?
sum(10, 20);
diff(10, 20);
function sum(x, y) {
  return x + y;
}

let diff = function (x, y) {
  return x - y;
};

 30, ReferenceError, 30, -10
 30, ReferenceError  X
 30, -10
 ReferenceError, -10
----------------------------------------------------------------------------------------
Q25. Which statement is true about the "async" attribute for the HTML script tag?
 It can be used for both internal and external JavaScript code.
 It can be used only for internal JavaScript code.
 It can be used only for internal or external JavaScript code that exports a promise.
 It can be used only for external JavaScript code.  X
----------------------------------------------------------------------------------------
Q26. What's one difference between the async and defer attributes of the HTML script tag?
 The defer attribute can work synchronously.
 The defer attribute works only with generators.
 The defer attribute works only with promises.
 The defer attribute will asynchronously load the scripts in order.  X

----------------------------------------------------------------------------------------
Q27. What value does this code return?
let answer = true;
if (answer === false) {
  return 0;
} else {
  return 10;
}

 10  X
 true
 false
 0
----------------------------------------------------------------------------------------
Q28. Which expression evaluates to true?
 [3] == [3]
 3 == '3'  X
 3 != '3'
 3 === '3'
----------------------------------------------------------------------------------------
Q29. Which of these is a valid variable name?
 5thItem
 firstName  X
 grand total
 function
----------------------------------------------------------------------------------------
Q30. Which method do you use to attach one DOM node to another?
 attachNode()
 getNode()
 querySelector()
 appendChild()  X
----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------
